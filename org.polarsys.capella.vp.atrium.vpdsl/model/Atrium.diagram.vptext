/******************************************************************************
* Copyright (c) 2006, 2016 Thales Global Services 
 * All rights reserved. This program and the accompanying materials 
 * are made available under the terms of the Eclipse Public License v1.0 
 * which accompanies this distribution, and is available at 
 * http://www.eclipse.org/legal/epl-v10.html 
 * 
 * Contributors: 
 *    Thales - initial API and implementation
*****************************************************************************/
Diagrams Atrium.diagram {
	DiagramExtension "Atrium_LogicalExtension" {
		extended-diagram: LogicalArchitectureBlank
		Mapping {
			Container Container_list_CFA {
				domain-context: Atrium.data.CFA_list
				provided-by association external emde.ExtensibleElement.ownedExtensions content-layout: List
				Representation {
					Label {
						content: "CFA List"
						police: black
					}
					Style {
						FlatStyle {
							background: light_chocolate foreground: white
						}
					}
				}
				Contains {
					Node node_CFA {
						domain-context: Atrium.data.CFA
						provided-by association external emde.ExtensibleElement.ownedExtensions
						Representation {
							Label {
								content: "[CFA] " + "aql:self.name"
								police: black
							}
							Style {
								BasicStyle {
									border-color: black background: light_green form: Square
								}
							}
						}
					}
				}
			}
			Container Container_list_Assumption {
				domain-context: Atrium.data.Assumption_list
				provided-by association external emde.ExtensibleElement.ownedExtensions content-layout: List
				Representation {
					Label {
						content: "Assumption list"
						police: black
					}
					Style {
						FlatStyle {
							background: light_chocolate foreground: white
						}
					}
				}
				Contains {
					Node node_assumption {
						domain-context: Atrium.data.Assumption
						provided-by association external emde.ExtensibleElement.ownedExtensions
						Representation {
							Label {
								content: "[Clarification] " + "aql:self.name"
								police: black
								alignment: center
							}
							Style {
								BasicStyle {
									border-color: black background: light_green form: Dot
								}
							}
						}
						Representation {
							condition: Java isTask
							Label {
								content: "[Task] " + "aql:self.name"
								police: black
								alignment: center
							}
							Style {
								BasicStyle {
									border-color: black background: gray form: Dot
								}
							}
						}
						Representation {
							condition: Java isRisk
							Label {
								content: "[Risk] " + "aql:self.name"
								police: black
								alignment: center
							}
							Style {
								BasicStyle {
									border-color: black background: red form: Triangle
								}
							}
						}
					}
				}
			}
			Container Container_list_DG {
				domain-context: Atrium.data.DG_list
				provided-by association external emde.ExtensibleElement.ownedExtensions content-layout: List
				Representation {
					Label {
						content: "DG list"
						police: black
					}
					Style {
						FlatStyle {
							background: light_chocolate foreground: white
						}
					}
				}
				Contains {
					Node node_DG {
						domain-context: Atrium.data.DG
						provided-by association external emde.ExtensibleElement.ownedExtensions
						Representation {
							Label {
								content: "[Goal] " + "aql:self.name"
								police: black
								alignment: center
							}
							Style {
								BasicStyle {
									border-color: black background: light_gray form: Square
								}
							}
						}
					}
				}
			}
			
			Container Container_list_DA {
				domain-context: Atrium.data.DA_list
				provided-by association external emde.ExtensibleElement.ownedExtensions content-layout: List
				Representation {
					Label {
						content: "DA list"
						police: black
					}
					Style {
						FlatStyle {
							background: light_chocolate foreground: white
						}
					}
				}
				Contains {
					Node node_DA {
						domain-context: Atrium.data.DA
						provided-by association external emde.ExtensibleElement.ownedExtensions
						Representation {
							Label {
								content: "[Design] " + "aql:self.name"
								police: black
								alignment: center
							}
							Style {
								BasicStyle {
									border-color: black background: light_gray form: Square
								}
							}
						}
					}
				}
			}

			///Import Capella Element + giving them a condition
			Container ContainerLC {
				import: LABLogicalComponent
				Representation {
					condition: Java isElementNew Style {
						FlatStyle {
							background: orange foreground: white
						}
					}
				}
			}
			Node NodeLF {
				import: LABLogicalFunction
				Representation {
					condition: Java isElementNewNode Style {
						BasicStyle {
							background: orange
						}
					}
				}
			}
			EdgeImport FunctionalExchange {
				import: LABDataFlowbetweenFunction Representation {
					condition: Java isElementNewFE Style {
						line-style: solid
						end-decorator: NoDecoration
						color: orange
					}
				}
			}
			//End import

		}
		Actions {
			OpenAction create_CFA_list {
				label: "Create CFA List"
			}
			OpenAction create_Assumption_list {
				label: "Create Assumption List"
			}
			OpenAction create_DG_list {
				label: "Create DG List"
			}
			OpenAction create_DA_list {
				label: "Create DA List"
			}
			OpenAction add_CFA {
				label: "Add CFA"
			}
			OpenAction add_assumption {
				label: "Add Assumption"
			}
			OpenAction add_DG {
				label: "Add DG"
			}
			OpenAction add_DA {
				label: "Add DA"
			}
			OpenAction ElementNewDevelopment {
				label: "ElementNewDevelopment"
			}
			OpenAction ElementLegacy {
				label: "ElementLegacy"
			}
			
			OpenAction openSwing {
				label: "Open Swing"
			}
			
		}
	}
}